"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.StyledFilterHeader = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _panelHeaderAction = _interopRequireDefault(require("../panel-header-action"));

var _icons = require("../../common/icons");

var _colorUtils = require("../../../utils/color-utils");

var _styledComponents2 = require("../../common/styled-components");

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex: 2;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  cursor: pointer;\n  padding: 10px 12px;\n\n  .field-selector {\n    flex: 2;\n  }\n\n  border-left: 3px solid;\n  ", "\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var StyledFilterHeader = (0, _styledComponents["default"])(_styledComponents2.StyledPanelHeader)(_templateObject(), function (props) {
  return props.labelRCGColorValues && props.labelRCGColorValues.length > 0 ? "border-image: ".concat((0, _colorUtils.createLinearGradient)('bottom', props.labelRCGColorValues), " 3;") : 'border-color: transparent;';
});
exports.StyledFilterHeader = StyledFilterHeader;

var StyledChildrenContainer = _styledComponents["default"].div(_templateObject2());

FilterPanelHeaderFactory.deps = [];

function FilterPanelHeaderFactory() {
  var FilterPanelHeader = function FilterPanelHeader(_ref) {
    var children = _ref.children,
        datasets = _ref.datasets,
        allAvailableFields = _ref.allAvailableFields,
        setFilter = _ref.setFilter,
        idx = _ref.idx,
        filter = _ref.filter,
        removeFilter = _ref.removeFilter;
    return /*#__PURE__*/_react["default"].createElement(StyledFilterHeader, {
      className: "filter-panel__header",
      labelRCGColorValues: datasets.map(function (d) {
        return d.color;
      })
    }, /*#__PURE__*/_react["default"].createElement(StyledChildrenContainer, null, children), /*#__PURE__*/_react["default"].createElement(_panelHeaderAction["default"], {
      id: filter.id,
      tooltip: "tooltip.delete",
      tooltipType: "error",
      onClick: removeFilter,
      hoverColor: 'errorColor',
      IconComponent: _icons.Trash
    }));
  };

  return FilterPanelHeader;
}

var _default = FilterPanelHeaderFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpZGUtcGFuZWwvZmlsdGVyLXBhbmVsL2ZpbHRlci1wYW5lbC1oZWFkZXIuanMiXSwibmFtZXMiOlsiU3R5bGVkRmlsdGVySGVhZGVyIiwiU3R5bGVkUGFuZWxIZWFkZXIiLCJwcm9wcyIsImxhYmVsUkNHQ29sb3JWYWx1ZXMiLCJsZW5ndGgiLCJTdHlsZWRDaGlsZHJlbkNvbnRhaW5lciIsInN0eWxlZCIsImRpdiIsIkZpbHRlclBhbmVsSGVhZGVyRmFjdG9yeSIsImRlcHMiLCJGaWx0ZXJQYW5lbEhlYWRlciIsImNoaWxkcmVuIiwiZGF0YXNldHMiLCJhbGxBdmFpbGFibGVGaWVsZHMiLCJzZXRGaWx0ZXIiLCJpZHgiLCJmaWx0ZXIiLCJyZW1vdmVGaWx0ZXIiLCJtYXAiLCJkIiwiY29sb3IiLCJpZCIsIlRyYXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVPLElBQU1BLGtCQUFrQixHQUFHLGtDQUFPQyxvQ0FBUCxDQUFILG9CQVMzQixVQUFBQyxLQUFLO0FBQUEsU0FDTEEsS0FBSyxDQUFDQyxtQkFBTixJQUE2QkQsS0FBSyxDQUFDQyxtQkFBTixDQUEwQkMsTUFBMUIsR0FBbUMsQ0FBaEUsMkJBQ3FCLHNDQUFxQixRQUFyQixFQUErQkYsS0FBSyxDQUFDQyxtQkFBckMsQ0FEckIsV0FFSSw0QkFIQztBQUFBLENBVHNCLENBQXhCOzs7QUFlUCxJQUFNRSx1QkFBdUIsR0FBR0MsNkJBQU9DLEdBQVYsb0JBQTdCOztBQUtBQyx3QkFBd0IsQ0FBQ0MsSUFBekIsR0FBZ0MsRUFBaEM7O0FBRUEsU0FBU0Qsd0JBQVQsR0FBb0M7QUFDbEMsTUFBTUUsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQjtBQUFBLFFBQ3hCQyxRQUR3QixRQUN4QkEsUUFEd0I7QUFBQSxRQUV4QkMsUUFGd0IsUUFFeEJBLFFBRndCO0FBQUEsUUFHeEJDLGtCQUh3QixRQUd4QkEsa0JBSHdCO0FBQUEsUUFJeEJDLFNBSndCLFFBSXhCQSxTQUp3QjtBQUFBLFFBS3hCQyxHQUx3QixRQUt4QkEsR0FMd0I7QUFBQSxRQU14QkMsTUFOd0IsUUFNeEJBLE1BTndCO0FBQUEsUUFPeEJDLFlBUHdCLFFBT3hCQSxZQVB3QjtBQUFBLHdCQVN4QixnQ0FBQyxrQkFBRDtBQUNFLE1BQUEsU0FBUyxFQUFDLHNCQURaO0FBRUUsTUFBQSxtQkFBbUIsRUFBRUwsUUFBUSxDQUFDTSxHQUFULENBQWEsVUFBQUMsQ0FBQztBQUFBLGVBQUlBLENBQUMsQ0FBQ0MsS0FBTjtBQUFBLE9BQWQ7QUFGdkIsb0JBSUUsZ0NBQUMsdUJBQUQsUUFBMEJULFFBQTFCLENBSkYsZUFLRSxnQ0FBQyw2QkFBRDtBQUNFLE1BQUEsRUFBRSxFQUFFSyxNQUFNLENBQUNLLEVBRGI7QUFFRSxNQUFBLE9BQU8sRUFBQyxnQkFGVjtBQUdFLE1BQUEsV0FBVyxFQUFDLE9BSGQ7QUFJRSxNQUFBLE9BQU8sRUFBRUosWUFKWDtBQUtFLE1BQUEsVUFBVSxFQUFFLFlBTGQ7QUFNRSxNQUFBLGFBQWEsRUFBRUs7QUFOakIsTUFMRixDQVR3QjtBQUFBLEdBQTFCOztBQXlCQSxTQUFPWixpQkFBUDtBQUNEOztlQUVjRix3QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBQYW5lbEhlYWRlckFjdGlvbiBmcm9tICdjb21wb25lbnRzL3NpZGUtcGFuZWwvcGFuZWwtaGVhZGVyLWFjdGlvbic7XG5pbXBvcnQge1RyYXNofSBmcm9tICdjb21wb25lbnRzL2NvbW1vbi9pY29ucyc7XG5pbXBvcnQge2NyZWF0ZUxpbmVhckdyYWRpZW50fSBmcm9tICd1dGlscy9jb2xvci11dGlscyc7XG5pbXBvcnQge1N0eWxlZFBhbmVsSGVhZGVyfSBmcm9tICdjb21wb25lbnRzL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRGaWx0ZXJIZWFkZXIgPSBzdHlsZWQoU3R5bGVkUGFuZWxIZWFkZXIpYFxuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMTJweDtcblxuICAuZmllbGQtc2VsZWN0b3Ige1xuICAgIGZsZXg6IDI7XG4gIH1cblxuICBib3JkZXItbGVmdDogM3B4IHNvbGlkO1xuICAke3Byb3BzID0+XG4gICAgcHJvcHMubGFiZWxSQ0dDb2xvclZhbHVlcyAmJiBwcm9wcy5sYWJlbFJDR0NvbG9yVmFsdWVzLmxlbmd0aCA+IDBcbiAgICAgID8gYGJvcmRlci1pbWFnZTogJHtjcmVhdGVMaW5lYXJHcmFkaWVudCgnYm90dG9tJywgcHJvcHMubGFiZWxSQ0dDb2xvclZhbHVlcyl9IDM7YFxuICAgICAgOiAnYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsnfVxuYDtcblxuY29uc3QgU3R5bGVkQ2hpbGRyZW5Db250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAyO1xuYDtcblxuRmlsdGVyUGFuZWxIZWFkZXJGYWN0b3J5LmRlcHMgPSBbXTtcblxuZnVuY3Rpb24gRmlsdGVyUGFuZWxIZWFkZXJGYWN0b3J5KCkge1xuICBjb25zdCBGaWx0ZXJQYW5lbEhlYWRlciA9ICh7XG4gICAgY2hpbGRyZW4sXG4gICAgZGF0YXNldHMsXG4gICAgYWxsQXZhaWxhYmxlRmllbGRzLFxuICAgIHNldEZpbHRlcixcbiAgICBpZHgsXG4gICAgZmlsdGVyLFxuICAgIHJlbW92ZUZpbHRlclxuICB9KSA9PiAoXG4gICAgPFN0eWxlZEZpbHRlckhlYWRlclxuICAgICAgY2xhc3NOYW1lPVwiZmlsdGVyLXBhbmVsX19oZWFkZXJcIlxuICAgICAgbGFiZWxSQ0dDb2xvclZhbHVlcz17ZGF0YXNldHMubWFwKGQgPT4gZC5jb2xvcil9XG4gICAgPlxuICAgICAgPFN0eWxlZENoaWxkcmVuQ29udGFpbmVyPntjaGlsZHJlbn08L1N0eWxlZENoaWxkcmVuQ29udGFpbmVyPlxuICAgICAgPFBhbmVsSGVhZGVyQWN0aW9uXG4gICAgICAgIGlkPXtmaWx0ZXIuaWR9XG4gICAgICAgIHRvb2x0aXA9XCJ0b29sdGlwLmRlbGV0ZVwiXG4gICAgICAgIHRvb2x0aXBUeXBlPVwiZXJyb3JcIlxuICAgICAgICBvbkNsaWNrPXtyZW1vdmVGaWx0ZXJ9XG4gICAgICAgIGhvdmVyQ29sb3I9eydlcnJvckNvbG9yJ31cbiAgICAgICAgSWNvbkNvbXBvbmVudD17VHJhc2h9XG4gICAgICAvPlxuICAgIDwvU3R5bGVkRmlsdGVySGVhZGVyPlxuICApO1xuXG4gIHJldHVybiBGaWx0ZXJQYW5lbEhlYWRlcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgRmlsdGVyUGFuZWxIZWFkZXJGYWN0b3J5O1xuIl19